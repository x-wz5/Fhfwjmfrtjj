local instructions = {}
instructions.__index = instructions

function instructions.new(bytecode)
    local buf = buffer.new(bytecode)
    local self = setmetatable({}, instructions)
    self.instructionSet = {}
    
    -- Read opcode
    self.value = buf:readWord()
    self.opcode = bit32.band(self.value, 0xFF)
    self.opcode = (self.opcode * 203) % 256
    
    -- Set instruction fields based on opcode
    self.A = bit32.band(bit32.rshift(self.value, 8), 0xFF)
    self.B = bit32.band(bit32.rshift(self.value, 16), 0xFF)
    self.C = bit32.band(bit32.rshift(self.value, 24), 0xFF)
    self.D = bit32.rshift(self.value, 16)  -- D takes higher bits from B/C fields
    
    return self
end

return instructions